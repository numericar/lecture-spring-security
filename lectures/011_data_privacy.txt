Data privacy
    มี 3 วิธีการที่จะปกป้องข้อมูลสำคัญในฐานข้อมูล
        - Encoding (ห้ามใช้ในการเข้ารหัส)
            เป็นการแปลงข้อมูลจากรูปแบบหนึ่ง เป็นอีกรูปแบบหนึ่ง โดยมันจะไม่ใช่การเข้ารหัสใด ๆ (cryptography)
            โดยทุกคนสามารถถอดรหัส (decode) ออกมาได้ เพราะว่า จะไม่มีการใช้ secret key ใด ๆ ในการเข้ารหัส
            เช่น ASCII, BASE64, UNICODE
            [plain_text] --[encoding]--> [encoded_text] --[decoding]--> [plain_text]
            โดยปกติจะใช้กับข้อมูลประเภท รูปภาพ, วิดีโอ เนื่องจากหลาย ๆ แอพพลิเคชั่น ไม่สามารถประมวลผลกับ binary data ได้
            จึงได้นำ binary data มา encoding ในรูปแบบ BASE64

        - Encryption
            เป็นการแปลงข้อมูลจากรูปแบบหนึ่ง เป็นอีกรูปแบบหนึ่ง โดยการใช้งาน secret key + encryption algorithm 
            เข้ามาช่วยในการเข้ารหัสข้อมูล โดยการที่เราจะย้อนกลับข้อมูลที่ถูกเข้ารหัสแล้ว เป็นข้อมูลตั้งต้น เราจะต้อใช้ encryption algorithm
            เดียวกันกับตอนที่เข้ารหัส และจะต้องมี secret key ที่ตรงกันได้

            แต่ยังไม่เหมาะสมกับการนำมาใช้ในการเก็บรหัสผ่าน เนื่องจากระบบจะต้องสร้าง secret key
            และถ้า secret key หาย ก็จะทำให้ไม้สามารถ decryption ข้อมูลนั้นได้อีกเลย

            [plain_text] --[encryption]--> [encrypted_text || cipher_text] --[decryption]--> [plain_text]

            โดยจะมีการ Encryption อีกรูปแบบ คือ Asymmetric encryption
            ก็คือแทนที่จะมีแค่ 1 key ในการเข้ารหัส เราก็จะสร้างขึ้นมา 2 key ก็คือ public key และ private key 
            โดนเจ้าของข้อมูลจะทำการเก็บ private key ไว้ และให้ผู้อื่นนำ public key ไปใช้
            โดยคนที่จะสามารถเช้ารหัสข้อมูลได้ จะต้องใช้ public key เท่านั้น (ซึ่งในที่นี้จะเป็นใครก็ได้ ที่เราให้ public key ไป)
            แต่การจะ decryption ข้อมูลออกมาดูจะต้องใช้ private key เท่านั้น ซึ่งจะมีแค่เจ้าของที่สามารถ decryption ข้อมูลออกมาดูได้

            สรุปสั้น ๆ
                ใคร ๆ ก็ถามที่ถือ public key สามารถเข้ารหัสข้อมูลได้ แต่คนที่จะถอดรหัสได้จะต้องมี private key เท่านั้น

            โดยจะใช้ในสถานการณ์ที่จะต้องส่งข้อมูลหากัน แล้วป้องกันไม่ให้ใครก็ตามที่สามารถเจาะเข้ามาดูข้อมูลระหว่างการส่งได้
            เช่น 
                server A ต้องการขอข้อมูลจาก server B 
                แต่ server A กลัวว่าระหว่างที่ server B ส่่งข้อมูลกลับมา จะมีคนมาดักขโมบข้อมูลระหว่างทาง
                server A จึงสร้าง public key และ private key ขึ้นมา 
                และทำการส่ง public key ให้กับ server B 
                ใน server B เมื่อได้รับคำขอ ก่อนส่งข้อมูลกลับไปให้ server A จะทำการเข้ารหัสด้วย public key ที่ server A ส่งให้ก่อนแล้วค่อยส่งข้อมูล
                เมื่อ server A ได้รับข้อมูลที่ถูกเข้ารหัสจาก server B จะทำการนำ private key มาถอดรหัสข้อมูล

        - Hashing (recommend)
            เป็นการแปลงข้อมูล plain_text เป็นค่าแฮช โดยใช้ฟังก์ชันทางคณิตศาสตร์
            โดยเมื่อเราต้องการทำข้อความเปลี่ยนเป็นค่าแฮช มันจะนำข้อความไปเข้าฟังก์ชันทางคณิตศาสตร์และส่งผลลัพธ์ออกมา
            โดยผลลัพธ์นั้นเราเรียกว่า Hashing

            โดยข้อมูลที่ถูกแฮชแล้ว จะไม่สามารถย้อนกลับมาดูข้อมูลต้นฉบับได้อีก

            โดยถ้าเราใส่ข้อมูลเดิมเข้าไปในฟังก์ชันแฮช มันจะได้ข้อมูลเหมือนกับอันที่เคยแฮชไปแล้วเสมอ
            เช่น 12345 -> ABCDE แล้วรอบต่อมาเราใส่ 12345 ก็จะได้ ABCDE อีกรอบเหมือรเดิม

            ไม่ว่าข้อมูลจะเยอะมากขนาดไหน แต่เมื่อนำมาแฮชแล้ว จะได้ขนาดเท่าเดิมเสมอ
  
            โดยจะขึ้นอยู่กับฟังก์ชันที่ใช้ เช่น sha-256, sha-512

            ข้อเสีย 
                ด้วยความที่ว่าถ้าเป็นข้อมูลเดียวกัน จะทำให้ค่า hash ออกมาเหมือนกัน ทำให้ hacker สามารถใช้วิธีการ boost force ในการสุ่มรหัสได้

            การป้องกันข้อเสียของ hashing
                - salts
                    เราจะใช้ salt เข้าในช่วยให้การ hashing นั้นไม่ซ้ำกันได้ด้วย ทำให้ hacker เดารหัสได้ยากมาก
                    เช่น รหัสผ่านคือ 12345 ระบบจะสร้างค่าที่ถูกสุ่มขึ้นมา (randam value) ซึ่งเราจะเรียกส่งนี้ว่า salt เช่น aex2fdac
                    โดยระบบจะเรา password และ salt มาต่อกัน เล่น aex2fdac12345 แล้วจึงนำไปเข้าฟังก์ชัน hash

                    โดยข้อดี คือ ถึงแม้ว่าผู้ใช้หลายคนจะมีรหัสผ่านที่เหมือนกัน แต่การใส่ salt ลงไปจะทำให้รหัสผ่านเหล่านั้นค่า hash ที่ได้จะแตกต่งกันแน่นอน

                    วิธีการนี้อาจไม่สามารถป้องกันการ boost force ได้ สิ่งที่เราสามารถทำได้คือการจำกัดการใส่รหัสเป็นจำนวนครั้ง เช่น ถ้าใส่รหัสผิดมา 3 ครั้งติดกันจะทำการล็อคบัญชี

            algorithm ของการ hashing มีดังนี้
                - BCrypt 
                - SCrypt
                - Argon2